{"name": "获取物料信息成功", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_logistic.TestLogistic object at 0x000002650DA42E88>\nbase_info = {'api-name': '获取物料信息', 'cookies': '${get_extract_data(cookie)}', 'header': {'Content-Type': 'application/json;charset=UTF-8'}, 'method': 'post', ...}\ntestcase = {}\n\n    @pytest.mark.parametrize(\"base_info,testcase\",\n                             readTestCase(\"./testcase/logistic/getMaterial.yaml\"))  # 传入yaml文件中的参数\n    def test_get_material(self, base_info, testcase):\n        # logs.info(f\"参数化为:{params}\")\n        # print(\"传递参数为\", params)\n        allure.dynamic.title(testcase[\"case_name\"])\n>       BaseRequests().specification_yaml(base_info, testcase)\n\ntestcase\\logistic\\test_logistic.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase\\apiutil.py:146: in specification_yaml\n    assert_res.assert_result(validation, resJson, res.status_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.assertion.Assertion object at 0x000002650DA760C8>, expected = [{'contains': {'msg': '操作成功'}}], response = {'msg': '未携带cookie信息'}, status_code = 200\n\n    def assert_result(self, expected, response, status_code):\n        \"\"\"\n        :param expected:预期结果\n        :param response:实际响应结果\n        :param status_code:实际状态码\n        :return:\n        \"\"\"\n        print(\"获取Expected:\", expected)\n    \n        all_flag = 0  # 断言成功标识\n        for oneExpected in expected:  # 拿到yaml表中每一个断言模式：contains、eq等\n            print(\"exptected的类型为\",type(expected))\n            print(\"oneExpected的值为:\", oneExpected)\n            for assType, value in oneExpected.items():  # 拿到断言模式中具体的键值   ##oneExpected有问题！\n                if assType == \"contains\":\n                    flag = self.contains_assert(value, response, status_code)\n                    all_flag += flag\n                elif assType == \"eq\":\n                    flag = self.equal_assert(value, response)\n                    all_flag += flag\n                elif assType == \"db\":\n                    self.assert_mysql(value)\n                    all_flag += flag\n    \n>       assert all_flag == 0\nE       AssertionError\n\ncommon\\assertion.py:109: AssertionError"}, "attachments": [{"name": "接口地址:http://127.0.0.1:8787/api/order/customer/orderPlan/getMaterial", "source": "bbca54f8-7a44-48e4-95c7-731a9df90c08-attachment.txt", "type": "text/plain"}, {"name": "接口名称:获取物料信息", "source": "9a83e192-3e8e-4843-8b6a-569bf5b2abdf-attachment.txt", "type": "text/plain"}, {"name": "请求头:{'Content-Type': 'application/json;charset=UTF-8'}", "source": "24d82330-2ba9-4e15-b379-d72a913b703c-attachment.txt", "type": "text/plain"}, {"name": "请求方法:post", "source": "55a46fd0-37e5-49c7-a1f8-4f9c7690b4c0-attachment.txt", "type": "text/plain"}, {"name": "请求参数:{}", "source": "b10d571b-a55d-465c-92ba-3015c83572a2-attachment.txt", "type": "text/plain"}, {"name": "接口响应信息:", "source": "2c7c87d8-8cb3-45f9-829f-983c7b24b2dc-attachment.txt", "type": "text/plain"}, {"name": "接口状态码: 200", "source": "11d11b01-a759-4075-ac83-754525285163-attachment.txt", "type": "text/plain"}, {"name": "包含断言值", "source": "160b65fb-bed2-49c1-9ed0-5fef151545a1-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "aa023741-6ade-4ad9-95d0-c0c033b989b1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "base_info", "value": "{'api-name': '获取物料信息', 'url': '/api/order/customer/orderPlan/getMaterial', 'method': 'post', 'header': {'Content-Type': 'application/json;charset=UTF-8'}, 'cookies': '${get_extract_data(cookie)}'}"}, {"name": "testcase", "value": "{'case_name': '获取物料信息成功', 'validation': [{'contains': {'msg': '操作成功'}}]}"}], "start": 1712150437574, "stop": 1712150437598, "uuid": "5790febf-f09c-47cb-85eb-27325e72305d", "historyId": "65af59fc397eaf5b81c9493323983734", "testCaseId": "5c35729edd70a01d579c30d3311d8188", "fullName": "testcase.logistic.test_logistic.TestLogistic#test_get_material", "labels": [{"name": "feature", "value": "物流项目接口"}, {"name": "parentSuite", "value": "testcase.logistic"}, {"name": "suite", "value": "test_logistic"}, {"name": "subSuite", "value": "TestLogistic"}, {"name": "host", "value": "LAPTOP-I0ETAENS"}, {"name": "thread", "value": "7664-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.logistic.test_logistic"}]}